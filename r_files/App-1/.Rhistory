demo[nrow(demo) - 1, 3] <- "green"
demo[nrow(demo), 3] <- "red"
ggplot(demo, aes(dia, sys,colour=filler)) +
geom_point() +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys,colour=filler)) +
geom_point() +
labs(x="Diastolic", y="Systolic") +
theme_minimal() + scale_fill_manual(values=c("black", "#E69F00", "#56B4E9"))
#theme(axis.text=element_text(size=20),
ggplot(demo, aes(dia, sys,colour=filler)) +
geom_point() +
labs(x="Diastolic", y="Systolic") +
theme_minimal() + scale_fill_manual(values=c("black", "red", "green","blue"))
ggplot(demo, aes(dia, sys,colour=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue")) +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue")) +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue"))
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue"))
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue"))
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_fill_manual(values=c("black", "red", "green","blue"))
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_color_manual(values=c("black", "red", "green","blue")) +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys,color=filler)) +
geom_point() +
scale_color_manual(values=c("green", "red", "black","blue")) +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys,color=filler,size=10)) +
geom_point() +
scale_color_manual(values=c("green", "red", "black","blue")) +
labs(x="Diastolic", y="Systolic") +
theme_minimal()
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20))+
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic",caption = "Demonstrating how mahalanobis works") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20))+
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic",caption = "Demonstrating how mahalanobis works") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20), plot.caption = element_text(size = 10)+
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic",caption = "Demonstrating how mahalanobis works") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20), plot.caption = element_text(size = 10)+
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic",caption = "Demonstrating how mahalanobis works") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20), plot.caption = element_text(size = 10)) +
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic",caption = "Demonstrating how mahalanobis works") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20),plot.caption = element_text(size = 10)) +
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(demo, aes(dia, sys)) +
geom_point() +
labs(x="Diastolic", y="Systolic") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20),plot.caption = element_text(size = 10)) +
annotate("point", x = 65, y = 123,
colour = "blue",size=8,shape=17) +
annotate("point", x = 68, y = 121,
colour = "red",size=8) +
annotate("point", x = 71, y = 122.5,
colour = "green",size=8,shape=15)
ggplot(mse, aes(true_dia,dia_lin))+
geom_point() +
geom_abline(aes(intercept=0, slope=1, col = "slope = 1")) +
geom_smooth(method="lm",aes(col = "Fitted Line")) +
labs(x="Predicted Diastolic", y="True Diastolic") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20))
ggplot(mse, aes(true_sys,sys_lin))+
geom_point() +
geom_abline(aes(intercept=0, slope=1, col = "slope = 1")) +
geom_smooth(method="lm",aes(col = "Fitted Line")) +
labs(x="Predicted Systolic", y="True Systolic") +
theme_minimal() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20,face="bold"),legend.text=element_text(size=20))
mean(mse$linclust_mal)
sqrt(94)
predicted <- cbind(mse$rf_pred_sys, mse$rf_pred_dia)
first <- cbind(lin_frame_test_bp$bpxsy1, lin_frame_test_bp$bpxdi1)
first_to_pred <- mahalanobis(predicted, first, cov(predicted,first))
###looking at classifcations
lin_frame_test_bp$fist_to_pred <- first_to_pred
lin_frame_test_bp$color <- as.factor(ifelse(mse$rf_mal >= 149 ,"over","under"))
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "over")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
lin_frame_test_bp$fist_to_pred <- first_to_pred
lin_frame_test_bp$color <- as.factor(ifelse(mse$rf_mal >= 149 ,"over","under"))
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "over")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
### malahonbis distance
mal_true <- cbind(class_out$sys_mean,class_out$dia_mean)
mal_first <- cbind(class_out$bpxsy1,class_out$bpxdi1)
class_out$mal <- mahalanobis(mal_true, mal_first, cov(mal_true,mal_first))
sqrt(mean(class_out$mal))
lin_frame_test_bp$fist_to_pred <- first_to_pred
lin_frame_test_bp$color <- as.factor(ifelse(mse$rf_mal >= 149 ,"over","under"))
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "under")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
### malahonbis distance
mal_true <- cbind(class_out$sys_mean,class_out$dia_mean)
mal_first <- cbind(class_out$bpxsy1,class_out$bpxdi1)
class_out$mal <- mahalanobis(mal_true, mal_first, cov(mal_true,mal_first))
sqrt(mean(class_out$mal))
###looking at classifcations over
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "under")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy3 <- NULL
class_out$bpxsy2 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
sqrt(mean(class_out$mal))
###looking at classifcations over
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "under")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi3 <- NULL
class_out$bpxdi2 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
### malahonbis distance
mal_true <- cbind(class_out$sys_mean,class_out$dia_mean)
mal_first <- cbind(class_out$bpxsy1,class_out$bpxdi1)
class_out$mal <- mahalanobis(mal_true, mal_first, cov(mal_true,mal_first))
sqrt(mean(class_out$mal))
###looking at classifcations over
lin_frame_test_bp$fist_to_pred <- first_to_pred
lin_frame_test_bp$color <- as.factor(ifelse(mse$rf_mal >= 149 ,"over","under"))
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "over")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
lin_frame_test_bp$fist_to_pred <- first_to_pred
lin_frame_test_bp$color <- as.factor(ifelse(mse$rf_mal >= 149 ,"over","under"))
class_out <- lin_frame_test_bp %>% select(bpxsy1,bpxsy2,bpxsy3,bpxdi1,bpxdi2,bpxdi3,color) %>% filter(color == "over")
class_out$dia_mean <- rowMeans(class_out[,c("bpxdi2","bpxdi3")])
class_out$sys_mean <- rowMeans(class_out[,c("bpxsy2","bpxsy3")])
class_out$bpxsy2 <- NULL
class_out$bpxsy3 <- NULL
class_out$bpxdi2 <- NULL
class_out$bpxdi3 <- NULL
class_out$color <- NULL
class_out <- subset(class_out, select=c(4,1,3,2))
#### summary statistic
class_out$sys_error <- (class_out$sys_mean - class_out$bpxsy1)^2
class_out$di_error <- (class_out$dia_mean - class_out$bpxdi1)^2
sqrt(mean(class_out$sys_error))
sqrt(mean(class_out$di_error))
### malahonbis distance
mal_true <- cbind(class_out$sys_mean,class_out$dia_mean)
mal_first <- cbind(class_out$bpxsy1,class_out$bpxdi1)
class_out$mal <- mahalanobis(mal_true, mal_first, cov(mal_true,mal_first))
sqrt(mean(class_out$mal))
write.csv(mse,"mse.csv")
read.csv("mse.csv")
shiny::runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
cov(predicted,observed)
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
cov(a,b)
prediction <- data.frame(preds = prediction_sys,predd = prediction_dia)
observed <- data.frame(systolic = input$Systolic,diastolic = input$Diastolic)
a <- cbind(observed$systolic, observed$diastolic)
b <- cbind(prediction$preds, prediction$predd)
linear = lm(sys_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = input$Age,bmxwt = input$Weight)
prediction_sys <- predict(linear, prediction_frame)
###dia
linear = lm(dia_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = input$Age,bmxwt = input$Weight)
prediction_dia <- predict(linear, newdata = prediction_frame)
##distnace
prediction <- data.frame(preds = prediction_sys,predd = prediction_dia)
observed <- data.frame(systolic = 100,diastolic = 100)
linear = lm(sys_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = 40,bmxwt = 70)
prediction_sys <- predict(linear, prediction_frame)
prediction_frame <- data.frame(ridageyr = 40,bmxwt = 70)
prediction_dia <- predict(linear, newdata = prediction_frame)
linear = lm(dia_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = 40,bmxwt = 70)
prediction_dia <- predict(linear, newdata = prediction_frame)
prediction <- data.frame(preds = prediction_sys,predd = prediction_dia)
observed <- data.frame(systolic = 100,diastolic = 100)
a <- cbind(observed$systolic, observed$diastolic)
b <- cbind(prediction$preds, prediction$predd)
mahalanobis(a, b, cov(a,b))
cov(prediction,observed)
mahalanobis(pediction, observed, cov(prediction,observed))
mahalanobis(prediction, observed, cov(prediction,observed))
d <- mahalanobis(prediction, observed, cov(prediction,observed))
d
###sys
linear = lm(sys_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = 40,bmxwt = 70)
prediction_sys <- predict(linear, prediction_frame)
###dia
linear = lm(dia_mean~ridageyr+bmxwt,lin_frame_clean)
prediction_frame <- data.frame(ridageyr = 40,bmxwt = 70)
prediction_dia <- predict(linear, newdata = prediction_frame)
##distnace
prediction <- data.frame(preds = prediction_sys,predd = prediction_dia)
observed <- data.frame(systolic = 100,diastolic = 100)
a <- cbind(observed$systolic, observed$diastolic)
b <- cbind(prediction$preds, prediction$predd)
d <- mahalanobis(prediction, observed, cov(prediction,observed))
d
tryer <- mahalanobis(prediction, observed, cov(prediction,observed))
tryer
a <- cbind(observed$systolic, observed$diastolic)
b <- cbind(prediction$preds, prediction$predd)
tryer <- mahalanobis(a, b, cov(a,b))
tryer
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
cor(a,b)
rbind(a,b)
inverse(rbind(a,b))
cov(rbind(a,b))
runApp('classes/senior-research/r_files/App-1')
cov(rbind(a,b))
b
a
runApp('classes/senior-research/r_files/App-1')
rbind(a,b)
#b <- cbind(prediction$preds, prediction$predd)
b <- cbind(mse$rf_pred_sys, mse$rf_pred_dia)
distance <- mahalanobis(a,b, cov(rbind(a,b)))
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
#___________________________________________________________________________________________________
#### PLOTTING VARIABLE PERFORMANCE for SYSTOLIC
#___________________________________________________________________________________________________
sys_plot <- sys_imp[order(sys_imp[,1]),][11:21,]
ggplot(sys_imp, aes(y=Overall, x=reorder(X1,Overall),fill="red")) +
geom_bar(stat = "summary") +
coord_flip()  +
theme_minimal() +
scale_fill_discrete(guide=FALSE) +
scale_x_discrete(labels=c("Asian","Hispanic","White","LDL Chol.","HDL Chol.","Diabetes","Cholesterol","Black","Leg Circum.","Lower Arm Circum.","Gender","Glucose","Abdomin Circum.","Upper Arm Circum.", "Height","BMI","Hypertension Med.","Waist Circum.","Weight","Hypertension","Age")) +   labs(x="Predictor", y="Importance to Systolic Bloo Pressure") +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
#___________________________________________________________________________________________________
#### PLOTTING VARIABLE PERFORMANCE for SYSTOLIC
#___________________________________________________________________________________________________
sys_plot <- sys_imp[order(sys_imp[,1]),][11:21,]
ggplot(sys_imp, aes(y=Overall, x=reorder(X1,Overall),fill="red")) +
geom_bar(stat = "summary") +
coord_flip()  +
theme_minimal() +
scale_fill_discrete(guide=FALSE) +
scale_x_discrete(labels=c("Asian","Hispanic","White","LDL Chol.","HDL Chol.","Diabetes","Cholesterol","Black","Leg Circum.","Lower Arm Circum.","Gender","Glucose","Abdomin Circum.","Upper Arm Circum.", "Height","BMI","Hypertension Med.","Waist Circum.","Weight","Hypertension","Age")) +   labs(x="Predictor", y="Importance to Systolic Pressure") +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
shiny::runApp('classes/senior-research/r_files/App-1')
library(readr)
denisonBuildingsCoords <- read_csv("C:/Users/buehl/Downloads/denisonBuildingsCoords.csv")
View(denisonBuildingsCoords)
library(readr)
March_2019_deidentified <- read_csv("C:/Users/buehl/Downloads/March_2019_deidentified.csv")
View(March_2019_deidentified)
survey <- March_2019_deidentified
code <- denisonBuildingsCoords
summary(survey$Q32_1)
summary(survey$q31)
shiny::runApp('classes/senior-research/r_files/App-1')
rm(.SLIDIFY_ENV)
rm(list=ls())
shiny::runApp('classes/senior-research/r_files/App-1')
install.packages("ggplot2")
runApp('classes/senior-research/r_files/App-1')
library(ggplot2)
install.packages("c:/path/to/downloaded/zip/file/colorspace_1.2-5.zip")
shareedit
shiny::runApp('classes/senior-research/r_files/App-1')
library(shiny)
library(caret)
library(ggplot2)
remove.packages(ggplot2)
library(shiny)
library(caret)
library(ggplot2)
###navigate to App-1 folder
load("RandomForestDia.rda")
load("RandomForestSys.rda")
mse <- read.csv("mse.csv")
install.packages("colorspace")
runApp('classes/senior-research/r_files/App-1')
shiny::runApp('classes/senior-research/r_files/App-1')
install.packages("dplyr")
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
install.packages("dplyr")
library(dplyr)
library(shiny)
library(caret)
library(dplyr)
install.packages(c("caret", "dplyr", "ggplot2", "shiny"))
shiny::runApp('classes/senior-research/r_files/App-1')
install.packages("randomForest")
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
showLogs()
install.packages("rsconnect")
showLogs()
library(rsconnect)
showLogs()
shiny::runApp('classes/senior-research/r_files/App-1')
showLogs()
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
###navigate to App-1 folder
setwd("~/App1")
###navigate to App-1 folder
setwd("~/App1")
###navigate to App-1 folder
setwd("~/App1")
###navigate to App-1 folder
setwd("~/App1")
load("RandomForestDia.rda")
###navigate to App-1 folder
setwd("~/App1")
###navigate to App-1 folder
shinyAppDir("./r_files/App-1")
###navigate to App-1 folder
setwd("./r_files/App-1")
###navigate to App-1 folder
setwd("~/r_files/App-1")
###navigate to App-1 folder
getwd()
###navigate to App-1 folder
getwd()
setwd("~/classes/senior-research/r_files/App-1")
runApp()
runApp()
###navigate to App-1 folder
setwd("~/classes/senior-research/r_files/App-1")
###navigate to App-1 folder
setwd("~/classes/senior-research/r_files/App-1")
###navigate to App-1 folder
getwd()
###navigate to App-1 folder
getwd()
###navigate to App-1 folder
setwd("~/Documents/classes/senior-research/r_files/App-1")
###navigate to App-1 folder
setwd("~/")
###navigate to App-1 folder
getwd()
runApp('classes/senior-research/r_files/App-1')
install.packages("readr")
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
runApp('classes/senior-research/r_files/App-1')
library(shiny)
library(caret)
library(dplyr)
library(ggplot2)
library(readr)
library(rsconnect)
###navigate to App-1 folder
setwd("~/classes/senior-research/r_files/App-1")
load("RandomForestDia.rda")
load("RandomForestSys.rda")
mse <- read.csv("mse.csv")
runApp()
runApp()
###navigate to App-1 folder
getwd()
setwd("~/classes/senior-research/r_files/App-1")
runApp()
?rsconnect()
/var/log/shiny-server.log
/var/log/shiny-server/*.log
showLogs(/var/log/shiny-server.log)
showLogs("/var/log/shiny-server.log")
showLogs()
showLogs()
runApp()
